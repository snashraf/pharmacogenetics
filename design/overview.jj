--------------------------------- > Get pair data

CREATE TABLE Pairs (
	PairID binary PRIMARY KEY AUTOINCREMENT,
	GeneID text,
	DrugID text,
);

INSERT INTO Pairs VALUES(
	NULL,
	{{json.gene.id}},
	{{json.chemical.id}}
);

------------------------------------- > go through Drug IDs

CREATE TABLE Drugs (
	DrugID text,
	ChemName text
	ChemFormula text
);

CREATE TABLE DrugTerms (
	{{json.id}},
	{{json.resource}},
	{{json.term}}
);

INSERT INTO Drugs VALUES(
	{{json.id}},
	{{json.name}},
	{{json.smiles}}
);

{% for doc in json.terms %}

	INSERT INTO DrugTerms VALUES(
		{{json.id}},
		{{doc.resource}},
		{{doc.term}
	);

{% endfor %}

--------------------------------- > get GeneIDs from pairs

CREATE TABLE Genes (
	GeneID text,
	GeneSymbol text,
	GeneName text,
	RefGenome text,
	Chromosome text,
	Start integer,
	End integer
);

INSERT INTO Genes VALUES(
	{{json.id}},
	{{json.symbol}},
	{{json.name}},
	{{json.buildVersion}},
	{{json.chrStart}},
	{{json.chrStop}}
);

---------------------------- > get gene IDs and fetch haplotypes per gene

CREATE TABLE Haplotypes (
	GeneID text,
	HapID text,
	HapName text,
	Starname text,
	HGVS text
);

INSERT INTO Haplotypes VALUES(
	{{json.genes.id}},	
	{{json.id}},
	{{json.symbol}},
	{{json.name}},
	{{json.hgvs}}
);

CREATE TABLE HapVars (
	HapID text,
	VarID text,
	AltAllele text,
	MutType text
);

{% for doc in json.alleles %}

	INSERT INTO HapVars (
		{{doc.id}},
		{{doc.variant.id}},
		{{doc.allele}},
		{{doc.type}}
	);

{% endfor %}}

--------------------------- > go through varIDs and fetch data on them

CREATE TABLE Variants (
	VarID text,
	RSID text,
	Significance text
);

INSERT INTO Variants VALUES(
	{{json.id}},
	{{json.name}},
	{{json.clinicalSignificance}}
);

CREATE TABLE LocPGKB (
	VarID text,
	RefGenome text,
	Chromosome text,
	Start integer,
	End integer,
	RefAllele text
);

{% for doc in json.location %}
	{% if "ChGR37" in doc.name %}
	
		INSERT INTO LocPGKB VALUES(
			{{json.id}},
			{{doc.name}},
			{{doc.begin}},
			{{doc.end}},
			{{doc.reference}}
		);
	
	{% endif %}
{% endfor %}

{% for var in json.variants %}
	{% if "ChGR37" in doc.name %}
	
		INSERT INTO AltAlleles VALUES(
			{{json.id}},
			NULL,
			{{var}}
		);
	
	{% endif %}
{% endfor %}

CREATE TABLE AltAlleles (
	VarID text,
	AltPGKB text,
	AltVCF text

-- ( left shunt function ) and output a json-like file -- 
 
CREATE TABLE LocVCF (
	VarID text,
	Chromosome text,
	Start integer,
	End integer,
	RefAllele text
);

INSERT INTO LocVCF VALUES(
	{{json.id}},
	{{json.name}},
	{{json.begin}},
	{{json.end}},
	{{json.reference}}
);
		
{% for variant in json.variants %}
	UPDATE AltAlleles SET  AltPGKB = {{variant}} WHERE VarID = {{json.id}};
	);
{% endfor %}

----------------------------- > find annotations per pair

CREATE TABLE AnnoVar (
	AnID text,
	PairID binary,
	VarID text,
	LevelOfEvidence text
);

CREATE TABLE AnnoHap (
	AnID text,
	PairID binary,
	HapID text,
	LevelOfEvidence text
);

CREATE TABLE AnnoText (
	AnID text,
	Allele text,
	Phenotype text
);

---------------------------- > find matching guidelines

CREATE TABLE Guidelines (
	GuideID text,
	PairID binary
);

CREATE TABLE GuideOptions (
	GuideID text,
	HapID text,
	HapName text
);

