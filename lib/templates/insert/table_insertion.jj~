--------------------------------- > Get pair data

CREATE TABLE Pairs (
	PairID binary PRIMARY KEY AUTOINCREMENT,
	GeneID text,
	DrugID text,
);

INSERT INTO Pairs VALUES(
	NULL,
	{{json.gene.id}},
	{{json.chemical.id}}
);

CREATE TABLE Drugs (
	DrugID text,
	ChemName text
	ChemFormula text
);

INSERT INTO Drugs VALUES(
	{{json.id}},
	{{json.name}},
	{{json.smiles}}
);


--------------------------------- > get GeneIDs from pairs

CREATE TABLE Genes (
	GeneID text,
	GeneSymbol text,
	GeneName text,
	RefGenome text,
	Chromosome text,
	Start integer,
	End integer
);

INSERT INTO Genes VALUES(
	{{json.id}},
	{{json.symbol}},
	{{json.name}},
	{{json.buildVersion}},
	{{json.chrStart}},
	{{json.chrStop}}
);

---------------------------- > get gene IDs and fetch haplotypes per gene

CREATE TABLE Haplotypes (
	GeneID text,
	HapID text,
	HapName text,
	Starname text,
	HGVS text
);

INSERT INTO Haplotypes VALUES(
	{{json.genes.id}},	
	{{json.id}},
	{{json.symbol}},
	{{json.name}},
	{{json.hgvs}}
);

CREATE TABLE HapVars (
	HapID text,
	VarID text,
	AltAllele text,
	MutType text
);

INSERT INTO HapVars (
	{{json1.id}},
	{{json2.variant.id}},
	{{json2.allele}},
	{{json2.type}}
);
--------------------------- > go through varIDs and fetch data on them

CREATE TABLE Variants (
	VarID text,
	RSID text,
	Significance text
);

INSERT INTO Variants VALUES(
	{{json.id}},
	{{json.name}},
	{{json.clinicalSignificance}}
);

CREATE TABLE LocPGKB (
	VarID text,
	RefGenome text,
	Chromosome text,
	Start integer,
	End integer,
	RefAllele text
);

INSERT INTO LocPGKB VALUES(
	{{json.id}},
	{{json.location.name}},
	{{json.location.begin}},
	{{json.location.end}},
	{{json.location.reference}}
);


-- ( left shunt function )) --

CREATE TABLE LocVCF (
	VarID text,
	Chromosome text,
	Start integer,
	End integer,
	RefAllele text
);


CREATE TABLE AltAlleles (
	VarID text,
	AltPGKB text,
	AltVCF text
);

----------------------------- > find annotations per pair

CREATE TABLE AnnoVar (
	AnID text,
	PairID binary,
	VarID text,
	LevelOfEvidence text
);

CREATE TABLE AnnoHap (
	AnID text,
	PairID binary,
	HapID text,
	LevelOfEvidence text
);

CREATE TABLE AnnoText (
	AnID text,
	Allele text,
	Phenotype text
);

---------------------------- > find matching guidelines

CREATE TABLE Guidelines (
	GuideID text,
	PairID binary
);

CREATE TABLE GuideOptions (
	GuideID text,
	HapID text,
	HapName text
);

